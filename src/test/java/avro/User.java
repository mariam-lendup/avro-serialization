/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro;

import org.apache.avro.AvroRuntimeException;
import org.apache.avro.Schema;
import org.apache.avro.data.RecordBuilder;
import org.apache.avro.specific.*;

@SuppressWarnings("all")
@AvroGenerated
public class User extends SpecificRecordBase implements SpecificRecord {

  public static final Schema SCHEMA$ = new Schema.Parser().parse("{\"type\":\"record\",\"name\":\"User\",\"namespace\":\"avro\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"favorite_number\",\"type\":[\"int\",\"null\"]},{\"name\":\"favorite_color\",\"type\":[\"string\",\"null\"]}]}");

  private CharSequence name;
  private Integer favorite_number;
  private CharSequence favorite_color;

  @Override
  public Schema getSchema() {
    return SCHEMA$;
  }

  @Override
  public Object get(int i) {
    switch (i) {
      case 0:
        return name;
      case 1:
        return favorite_number;
      case 2:
        return favorite_color;
      default:
        throw new AvroRuntimeException("Bad index");
    }
  }

  @Override
  public void put(int i, Object value) {
      switch (i) {
        case 0: name = (CharSequence) value; break;
        case 1: favorite_number = (Integer)value; break;
        case 2: favorite_color = (CharSequence)value; break;
        default: throw new AvroRuntimeException("Bad index");
      }

  }

  public static Builder newBuilder() {
    return new Builder();
  }

  public static class Builder extends SpecificRecordBuilderBase<User>
          implements RecordBuilder<User> {

    private CharSequence name;
    private Integer favorite_number;
    private CharSequence favorite_color;

    private Builder() {
      super(SCHEMA$);
    }

    public Builder setName(CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    public Builder setFavoriteNumber(Integer value) {
      validate(fields()[1], value);
      this.favorite_number = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    public Builder setFavoriteColor(CharSequence value) {
      validate(fields()[2], value);
      this.favorite_color = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    @Override
    public User build() {
      try {
        User record = new User();
        record.name = fieldSetFlags()[0] ? this.name : (CharSequence) defaultValue(fields()[0]);
        record.favorite_number = fieldSetFlags()[1] ? this.favorite_number : (Integer) defaultValue(fields()[1]);
        record.favorite_color = fieldSetFlags()[2] ? this.favorite_color : (CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new AvroRuntimeException(e);
      }
    }
  }
}
